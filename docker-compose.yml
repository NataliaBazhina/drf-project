
services:
  web:
    build: .
    command: sh -c "python manage.py collectstatic --noinput && gunicorn config.wsgi:application --bind 0.0.0.0:8080"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
    expose:
      - "8080"
    depends_on:
      - db
      - redis
    env_file:
      - ./.env

  nginx:
    build:
      context: ./nginx
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/staticfiles
    depends_on:
      - web

  db:
    image: postgres:17.5
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.env
    environment:
      POSTGRES_DB: ${NAME}
      POSTGRES_USER: ${DBUSER}
      POSTGRES_PASSWORD: ${PASSWORD}
      SECRET_KEY: ${SECRET_KEY}
    expose:
      - "5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d drf" ]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7.2-alpine
    volumes:
      - redis_data:/data
    restart: always
    expose:
      - "6379"
    env_file:
      - ./.env


  celery:
    build: .
    command: >
      bash -c "celery -A config worker -l info"
    env_file:
      - .env
    volumes:
      - .:/code
    depends_on:
      - db
      - redis

  celery_beat:
    build: .
    command: >
      bash -c "sleep 10 && celery -A config worker --beat --loglevel=info"
    env_file:
      - .env
    volumes:
      - .:/code
    depends_on:
      - db
      - redis
      - web

volumes:
  postgres_data:
  static_volume:
  redis_data: